#include "stdafx.h"
#include "linkList.h"
#include <iostream>

using namespace std;

linkList::linkList()
{
	first = NULL;
	total = 0;
}

void linkList::additem(int d)
{
	link* newlink = new link; // выделяем память
	newlink->data = d; // запоминаем данные
	newlink->next = first; // запоминаем значение first
	first = newlink; // first теперь указывает на новый элемент
	total++;
}

void linkList::addItemInvert(int d)
{
	link* tmp = new link; // выделяем память

	tmp = first; // установить указатель на первый элемент
	while (tmp->next != NULL) // выход по достижении ПРЕДпоследнего элемента
	{
			link* temp = tmp; // сохранить указатель на данный элемент (последний или первый добавленный)
			tmp = tmp->next; // получить ссылку на  следующую ссылку
	}
	link* current = new link; // выделяем память
	current->data = d; // запоминаем данные
	current->next = NULL; // предыдущего элемента нету
	tmp->next = current; // запоминаем значение first, тоесть бывшему последнему элементу указываем на новый последний элемент
	total++;
}

void linkList::display()
{
	current = first; // начинаем с первого элемента
	while (current) // пока есть данные
	{
		cout << current->data << endl; // печатаем данные
		current = current->next; // двигаемся к следующему элементу
	}
}


linkList::~linkList()
{
	/*current = first; // начинаем с первого элемента
	while (current) // пока есть данные
	{
		
		delete current;
		current = current->next; // двигаемся к следующему элементу

		*/
		/*link* prev = first->next;
		while (prev)
		{
			cout << "deleting adress " << first << " with data " << first->data << endl;
			delete first;
			first = prev;
			prev = first->next;
		}
		cout << "deleting adress " << first << " with data " << first->data << endl;
		delete first;*/

		link* current = first; // установить указатель на
							  // первый элемент
		while (current != NULL) // выход по достижении
								// последнего элемента
		{
			link* temp = current; // сохранить указатель на // данный элемент
			current = current->next; // получить ссылку на
									 // следующую ссылку
			delete temp; // удалить эту ссылку
		}
	//}
}
